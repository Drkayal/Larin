#!/usr/bin/env python3
"""
ูุธุงู ุฅูุดุงุก ุญุณุงุจ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุชููุงุฆูุงู
Auto Database Account Creation
"""

import os
import subprocess
import asyncio
import asyncpg
from typing import Dict, Optional

async def check_database_exists() -> bool:
    """ุงูุชุญูู ูู ูุฌูุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    try:
        # ูุญุงููุฉ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุญุงููุฉ
        db_name = os.getenv("POSTGRES_DB", "zemusic_bot")
        user = os.getenv("POSTGRES_USER", "postgres")
        password = os.getenv("POSTGRES_PASSWORD", "")
        
        if password:
            uri = f"postgresql://{user}:{password}@localhost:5432/{db_name}"
        else:
            uri = f"postgresql://{user}@localhost:5432/{db_name}"
        
        conn = await asyncpg.connect(uri)
        await conn.close()
        return True
        
    except:
        return False

async def create_postgresql_user() -> Dict[str, str]:
    """ุฅูุดุงุก ูุณุชุฎุฏู PostgreSQL ุชููุงุฆูุงู"""
    try:
        # ุชูููุฏ ุงุณู ูุณุชุฎุฏู ูุฑูุฏ
        import uuid
        import socket
        hostname = socket.gethostname().replace('-', '_').replace('.', '_')
        unique_id = str(uuid.uuid4())[:8]
        db_user = f"{hostname}_{unique_id}_user"
        
        # ุชูููุฏ ูููุฉ ูุฑูุฑ ูููุฉ
        import secrets
        import string
        password = ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(16))
        
        # ุฅูุดุงุก ุงููุณุชุฎุฏู
        create_user_cmd = f'sudo -u postgres psql -c "CREATE USER \\"{db_user}\\" WITH PASSWORD \'{password}\';"'
        result = subprocess.run(create_user_cmd, shell=True, capture_output=True, text=True)
        
        if result.returncode != 0:
            # ุฅุฐุง ูุดูุ ุงุณุชุฎุฏู ุงููุณุชุฎุฏู ุงูุงูุชุฑุงุถู
            db_user = "postgres"
            password = ""
        
        return {
            "user": db_user,
            "password": password
        }
        
    except Exception as e:
        print(f"ุฎุทุฃ ูู ุฅูุดุงุก ุงููุณุชุฎุฏู: {e}")
        return {"user": "postgres", "password": ""}

async def create_database_account() -> Dict[str, str]:
    """ุฅูุดุงุก ุญุณุงุจ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุงูู"""
    try:
        # 1. ุฅูุดุงุก ุงููุณุชุฎุฏู
        user_info = await create_postgresql_user()
        
        # 2. ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช
        db_name = f"{user_info['user']}_db"
        create_db_cmd = f'sudo -u postgres psql -c "CREATE DATABASE \\"{db_name}\\" OWNER \\"{user_info[\"user\"]}\\";"'
        result = subprocess.run(create_db_cmd, shell=True, capture_output=True, text=True)
        
        if result.returncode != 0:
            # ุฅุฐุง ูุดูุ ุงุณุชุฎุฏู ุงุณู ุงูุชุฑุงุถู
            db_name = "zemusic_bot"
        
        # 3. ุฅุนุทุงุก ุงูุตูุงุญูุงุช
        if user_info['user'] != "postgres":
            grant_cmd = f'sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE \\"{db_name}\\" TO \\"{user_info[\"user\"]}\\";"'
            subprocess.run(grant_cmd, shell=True, capture_output=True, text=True)
        
        return {
            "DATABASE_TYPE": "postgresql",
            "POSTGRES_HOST": "localhost",
            "POSTGRES_PORT": "5432",
            "POSTGRES_DB": db_name,
            "POSTGRES_USER": user_info['user'],
            "POSTGRES_PASSWORD": user_info['password']
        }
        
    except Exception as e:
        print(f"ุฎุทุฃ ูู ุฅูุดุงุก ุญุณุงุจ ูุงุนุฏุฉ ุงูุจูุงูุงุช: {e}")
        return {
            "DATABASE_TYPE": "postgresql",
            "POSTGRES_HOST": "localhost",
            "POSTGRES_PORT": "5432",
            "POSTGRES_DB": "zemusic_bot",
            "POSTGRES_USER": "postgres",
            "POSTGRES_PASSWORD": ""
        }

def update_config_file(db_config: Dict[str, str]):
    """ุชุญุฏูุซ ููู config.py ุจุงูุฅุนุฏุงุฏุงุช ุงูุฌุฏูุฏุฉ"""
    try:
        # ูุฑุงุกุฉ config.py
        with open('config.py', 'r', encoding='utf-8') as f:
            config_content = f.read()
        
        # ุชุญุฏูุซ ุงูุฅุนุฏุงุฏุงุช
        for key, value in db_config.items():
            if key == "POSTGRES_PASSWORD":
                # ุชุญุฏูุซ ูููุฉ ุงููุฑูุฑ
                config_content = config_content.replace(
                    'POSTGRES_PASSWORD = getenv("POSTGRES_PASSWORD", "")',
                    f'POSTGRES_PASSWORD = getenv("POSTGRES_PASSWORD", "{value}")'
                )
            elif key == "POSTGRES_DB":
                # ุชุญุฏูุซ ุงุณู ูุงุนุฏุฉ ุงูุจูุงูุงุช
                config_content = config_content.replace(
                    'POSTGRES_DB = getenv("POSTGRES_DB", "zemusic_bot")',
                    f'POSTGRES_DB = getenv("POSTGRES_DB", "{value}")'
                )
            elif key == "POSTGRES_USER":
                # ุชุญุฏูุซ ุงุณู ุงููุณุชุฎุฏู
                config_content = config_content.replace(
                    'POSTGRES_USER = getenv("POSTGRES_USER", "postgres")',
                    f'POSTGRES_USER = getenv("POSTGRES_USER", "{value}")'
                )
        
        # ูุชุงุจุฉ ุงูุชุญุฏูุซุงุช
        with open('config.py', 'w', encoding='utf-8') as f:
            f.write(config_content)
        
        print("โ ุชู ุชุญุฏูุซ config.py ุจุงูุฅุนุฏุงุฏุงุช ุงูุฌุฏูุฏุฉ")
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุชุญุฏูุซ config.py: {e}")

async def auto_setup_database():
    """ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุชููุงุฆู ุงููุงูู"""
    print("๐ ุงูุชุญูู ูู ูุฌูุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช...")
    
    # ุงูุชุญูู ูู ูุฌูุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    if await check_database_exists():
        print("โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ููุฌูุฏุฉ ุจุงููุนู - ูุง ุญุงุฌุฉ ูุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ")
        return None
    
    print("๐ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ููุฌูุฏุฉ - ุจุฏุก ุฅูุดุงุก ุญุณุงุจ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุชููุงุฆูุงู...")
    
    # 1. ุฅูุดุงุก ุญุณุงุจ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    db_config = await create_database_account()
    
    # 2. ุนุฑุถ ุงููุนูููุงุช
    print("๐ ูุนูููุงุช ุญุณุงุจ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฌุฏูุฏ:")
    for key, value in db_config.items():
        if key == "POSTGRES_PASSWORD":
            print(f"   {key} = {'***' if value else '(ูุงุฑุบ)'}")
        else:
            print(f"   {key} = {value}")
    
    # 3. ุชุญุฏูุซ config.py
    update_config_file(db_config)
    
    # 4. ุชุญุฏูุซ ูุชุบูุฑุงุช ุงูุจูุฆุฉ
    for key, value in db_config.items():
        os.environ[key] = str(value)
    
    print("โ ุชู ุฅูุดุงุก ูุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุชููุงุฆูุงู!")
    return db_config

# ุชุดุบูู ุงูุฅุนุฏุงุฏ ุนูุฏ ุงุณุชูุฑุงุฏ ุงููุญุฏุฉ
if __name__ == "__main__":
    asyncio.run(auto_setup_database())